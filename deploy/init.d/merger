#!/bin/sh

### BEGIN INIT INFO
# Provides:          merger
# Required-Start:    $remote_fs $network $named $syslog
# Required-Stop:     $remote_fs $network $named $syslog
# Should-Start:      $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: RFID master-slave merger
# Description:       merge RFID IDs received by master and slave,
#                    generate events of students going in/out school gate,
#                    and push notification to server.
#                    Run in master only.
### END INIT INFO

set -e

SERVICE_ENABLE=true
VENDOR=gewuit
PROJECT=rfid
BASEDIR=/opt/$VENDOR/$PROJECT
DAEMON=$BASEDIR/bin/merger
PID_FILE=/var/run/merger.pid
CONFIG_FILE=$BASEDIR/etc/merger.ini
LOG_FILE=$BASEDIR/log/merger.log
OPTIONS=

test -x $DAEMON || exit 0

. /lib/lsb/init-functions
export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"

merger_start() {
    if [ ! -s "$CONFIG_FILE" ]; then
        log_failure_msg "missing or empty config file $CONFIG_FILE"
        log_end_msg 1
        exit 0
    fi
    if start-stop-daemon --start --quiet --background \
        --pidfile $PID_FILE --make-pidfile \
        --exec $DAEMON \
        -- "$CONFIG_FILE" "$LOG_FILE" $OPTIONS
    then
        rc=0
        sleep 1
        if ! kill -0 $(cat $PID_FILE) >/dev/null 2>&1; then
            log_failure_msg "merger failed to start"
            rc=1
        fi
    else
        rc=1
    fi
    if [ $rc -eq 0 ]; then
        log_end_msg 0
    else
        log_end_msg 1
        rm -f $PID_FILE
    fi
}

case "$1" in
  start)
	if "$SERVICE_ENABLE"; then
	    log_daemon_msg "Starting merger" "merger"
	    if [ -s $PID_FILE ] && kill -0 $(cat $PID_FILE) >/dev/null 2>&1; then
		log_progress_msg "already running"
		log_end_msg 0
		exit 0
	    fi
            merger_start
        else
            if [ -s "$CONFIG_FILE" ]; then
                [ "$VERBOSE" != no ] && log_warning_msg "merger not enabled, not starting..."
            fi
	fi
	;;
  stop)
	log_daemon_msg "Stopping merger" "merger"
	start-stop-daemon --stop --quiet --oknodo --pidfile $PID_FILE
	log_end_msg $?
	rm -f $PID_FILE
	;;

  reload|force-reload)
	log_daemon_msg "Reloading merger" "merger"
    if [ ! -f "$PID_FILE" ]; then
        log_failure_msg "merger is not running"
        log_end_msg 1
    fi
    kill -HUP `cat $PID_FILE`
    log_end_msg 0
	;;

  restart)
	set +e
	if $SERVICE_ENABLE; then
	    log_daemon_msg "Restarting merger" "merger"
	    if [ -s $PID_FILE ] && kill -0 $(cat $PID_FILE) >/dev/null 2>&1; then
		start-stop-daemon --stop --quiet --oknodo --pidfile $PID_FILE || true
		sleep 1
	    else
		log_warning_msg "merger not running, attempting to start."
	    	rm -f $PID_FILE
	    fi
            merger_start
        else
            if [ -s "$CONFIG_FILE" ]; then
                [ "$VERBOSE" != no ] && log_warning_msg "merger not enabled, not starting..."
            fi
	fi
	;;

  status)
	status_of_proc -p $PID_FILE "$DAEMON" merger
	exit $?	# notreached due to set -e
	;;
  *)
	echo "Usage: /etc/init.d/merger {start|stop|reload|force-reload|restart|status}"
	exit 1
esac

exit 0
