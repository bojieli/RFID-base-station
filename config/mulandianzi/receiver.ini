; config file of RFID receiver

[master]
; master IP is now dynamically retrieved from server
; If cannot connect to master for more than dynamic_ip_timeout seconds, re-retrieve master IP from server
master.dynamic_ip_timeout = 10
master.port = 12345
; times are in milliseconds
; send queue every send_interval time. If queue empty, it is seen by master as heartbeat
master.send_interval = 100
; if send exceeds such time, reconnect
master.send_timeout = 1000
; interval between two attempts of reconnecting master
master.retry_interval = 100
; If send queue length is more than this (should be multiple of packet length), send warning
master.warn_queue_len = 5000

[spi]
; SPI channel is 0/1
spi.channel = 0
spi.speed = 8000000

[nrf]
; NRF channel is 0..127
nrf.channel = 2
nrf.EN_AA = 0x00
nrf.EN_RXADDR = 0x01
nrf.SETUP_RETR = 0x00
nrf.RX_PLOAD_WIDTH = 5
nrf.RF_SETUP = 0x07
nrf.CONFIG = 0x0f
nrf.CONFIG_intr_mask = 0x7f
nrf.CONFIG_clear_intr = 0x70
nrf.CONFIG_send = 0x0e
nrf.TX_ADDRESS = 0xe79ee7
nrf.RX_ADDRESS = 0xe79ee7

[pin]
pin.IRQ = 1
pin.CSN = 4
pin.CE = 10
pin.LED = 0
pin.LED2 = 2

[led]
; in milliseconds
led.blink_interval = 100

[sms]
sms.token = M2La02Jd333Os3Nx
sms.remote_host = blog.ustc.edu.cn
sms.remote_port = 80
sms.remote_path = /servmon/sms-api.php
sms.maxnum_per_rfid = 4
; if multiple mobiles, separate with ","
sms.mobiles = 18715009901

[test]
; in milliseconds
test.multiple_send_interval = 3000

[http]
http.user_agent = receiver/1.0
http.timeout = 10

[cloud]
; access token is unique for each master, keep it secret!
cloud.access_token = helloworld123
cloud.remote_host = gewu.me
cloud.remote_port = 80
cloud.ok_response = OK
; minimum interval between requests to prevent exhausting the server
cloud.request_interval = 1
; if no requests, send heartbeat to server
cloud.heartbeat_interval = 10

[paths]
paths.reportitnow = /ecard/reportitnow
paths.queryip = /ecard/queryip

[debug]
debug.log_verbose = 1

